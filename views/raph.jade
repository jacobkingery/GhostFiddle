extends layout

block header_scripts
    script(src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js")
    script(src='/javascripts/raphael.js')
    //- style.
        html {
            height: 100%;
            padding: 0;
            margin: 0;
        }
        body {
            position: absolute;
            top: 0;
            left: 0;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            min-width: 100%;
        }

    script.

        window.onload = function() {
            // Raphael canvas
            var W = 1000,
                H = 700,
                r = Raphael("raphHolder", W, H);

            // Data storage    
            var lenSong = 12,
                numGlass = 6,
                notes = [],
                pauses = [];

            for (var i = 0; i < numGlass; i++) {
                notes.push([]);
                pauses.push([]);
                for (var j = 0; j < lenSong; j++){
                    notes[i].push(0);
                }
                for (var j = 0; j < lenSong-1; j++){
                    pauses[i].push(0);
                }
            }


            // Note selectors
            var smRadius = 10,
                lgRadius = 15,
                smRectHeight = 10,
                lgRectHeight = 15,
                horSpacing = 80,
                vertSpacing = 80,
                fills = ['#87E8D6','#FAE13C','#E43CFA','#3CFA58','#F24B96','#593AB5'],
                glasses={};
            var makeGlass = function (color) {
                return {'glassNotes': [],
                        'glassPause': [],
                        'color': color,
                        addNote: function (note) {this.glassNotes.push(note);},
                        addPause: function (pause) {this.glassPause.push(pause);
                                                    console.log("pushed pause");
                                                    }
                        
                        };
                };
            var path = r.path("M0 0L0 0").hide();
            var makeNote = function (x,y) {
                    var newNote = 
                            {'x':x,
                            'y':y,
                            'state':0,
                            'path':path = r.path("M"+(40+horSpacing*y)+" "+(40+vertSpacing*x)+"L"+(40+horSpacing*y)+" "+(40+vertSpacing*x))
                                        .attr({'stroke-width':smRectHeight,
                                        stroke:'black'/*fills[x]*/})
                                        .hide()
                                        ,
                            'circle':r.circle(40+horSpacing*y, 40+vertSpacing*x, smRadius)
                                .attr({fill: fills[x], stroke: fills[x], 'stroke-width': 2, 'fill-opacity': notes[x][y], 'stroke-opacity': 1})
                                .hover(function() {
                                    this.animate({r: lgRadius}, 100,'elastic');
                                },
                                function() {
                                    if (!notes[newNote.x][newNote.y]){
                                        this.animate({r: smRadius}, 100,'elastic');
                                    }
                                })
                                .drag(function(dx,dy){
                                        var pathArray = newNote.path.attr("path");
                                        pathArray[1][1] = 40+horSpacing*newNote.y+dx;
                                        //pathArray[1][2] = 40+vertSpacing*newNote.x+dy;
                                        newNote.path.attr({path:pathArray});
                                    },
                                    function(){
                                        newNote.path.show();
                                        var new_op = +!notes[newNote.x][newNote.y];
                                        if(new_op){
                                            notes[newNote.x][newNote.y] = 1;                        
                                            newNote.circle.animate({'fill-opacity' : 1}, 200);
                                        }
                                    },
                                    function(){
                                        var pathArray = newNote.path.attr("path");
                                        var glassesTraversed = Math.round((pathArray[1][1]-(40+horSpacing*newNote.y))/horSpacing);
                                        pathArray[1][1] = 40+horSpacing*(newNote.y+glassesTraversed);
                                        newNote.path.attr({path:pathArray});
                                        console.log(glassesTraversed);
                                        if(glassesTraversed < 0){
                                            for(var j = newNote.y; j>newNote.y+glassesTraversed-1 && j>0; j--){
                                                glasses[newNote.x].glassNotes[j].highlight();
                                                if( j > newNote.y+glassesTraversed &&j-1> 0){
                                                    glasses[newNote.x].glassPause[j-1].highlight();
                                                }
                                            }
                                        }else if(glassesTraversed>0){
                                            for(var j = newNote.y; j<newNote.y+glassesTraversed+1 && j<lenSong; j++){
                                                glasses[newNote.x].glassNotes[j].highlight();
                                                if(j<newNote.y+glassesTraversed&&j<lenSong-1){
                                                    glasses[newNote.x].glassPause[j].highlight();
                                                }
                                            }
                                        }else{
                                            var new_op = +!notes[newNote.x][newNote.y];
                                            if(!new_op){
                                                notes[newNote.x][newNote.y] = 0;                        
                                                newNote.circle.animate({'fill-opacity' : 0}, 200);
                                                if(newNote.y < lenSong-1)
                                                    glasses[newNote.x].glassPause[newNote.y].unhighlight();
                                                if(newNote.y-1 > 0){
                                                    glasses[newNote.x].glassPause[newNote.y-1].unhighlight();
                                                }
                                            }
                                        }
                                        pathArray[1][1] = 40+horSpacing*newNote.y;
                                        newNote.path.attr({path:pathArray});
                                        newNote.path.hide();

                                        this.dx = this.dy = 0;
                                    }),
                            'highlight': (function(){
                                notes[newNote.x][newNote.y] = 1;                        
                                newNote.circle.animate({'fill-opacity' : 1}, 200);
                                newNote.circle.animate({r: lgRadius}, 100,'elastic');

                            })
                        };
                    return newNote;
                }
            var makePause = function (x,y){
                var newPause = {'x':x,
                        'y':y,
                        'state':0,
                        'rect':
                        r.rect(40+horSpacing*y+smRadius, 40+vertSpacing*x-smRadius/2, horSpacing-2*smRadius , smRectHeight)
                        .attr({fill: fills[x], stroke: fills[x], 'fill-opacity': pauses[x][y]})
                        .click(function () {
                            newPause.unhighlight();
                        })
                        .hide(),
                        'highlight': (function(){
                            pauses[newPause.x][newPause.y] = 1;
                            newPause.rect.show();
                            newPause.rect.animate({'fill-opacity' : 1}, 200);
                            }),
                        'unhighlight': (function(){
                            pauses[newPause.x][newPause.y] = 0;
                            newPause.rect.animate({'fill-opacity' : 0}, 200);
                            newPause.rect.hide();
                            
                            }),
                        /*.hover(function() {
                                if (!pauses[this.data('y')][this.data('x')]){
                                    this.animate({y: this.attr('y')-2.5, height: lgRectHeight}, 1);
                                }
                            },
                            function() {
                                if (!pauses[this.data('y')][this.data('x')]){
                                    this.animate({y: this.attr('y')+2.5, height: smRectHeight}, 1);
                                }
                                }
                            });*/
                        }
                return newPause;   
            }
            for (var i = 0; i<numGlass; i++) {
                glasses[i]=makeGlass(fills[i]);

                for (var j = 0; j<lenSong-1; j++){
                    glasses[i].addPause(makePause(i,j));
                }
                for (var j = 0; j<lenSong; j++){
                    glasses[i].addNote(makeNote(i,j));
                }
            }

            // Submit button
            var subRect =
            r.rect(50, 500, 200, 60, 20)
                .attr({fill: "#3C850C", stroke: "#326E0A", 'stroke-width': 2, 'fill-opacity': .75, 'stroke-opacity': 1})
                
            var subText = 
            r.text(150,530,"Submit Song!")
                .attr({fill: "#FFFFFF", "font-size": 32, "font-family": "Helvetica" })
            var subButton = r.set()
                .attr({cursor: "pointer"});
            subButton.push(subRect);
            subButton.push(subText);
            subButton.hover(function() {
                subRect.animate({'fill-opacity' : 1}, 200);
                },
                function() {
                subRect.animate({'fill-opacity' : .75}, 200);
                })
            subButton.click(function() {
                var s = "";
                   console.log(notes);
                   for (var i = 0; i < numGlass; i++){
                       console.log(notes[i]);
                       s += notes[i].join('')+"\n";
                   }
                   console.log(s);
                   document.getElementById('notes').value = s;
                   document.getElementById('newSong').submit();
            });

        };


block content

    div(id="raphHolder")
    div(id="formHolder")
        form(id="newSong", method="post", action="/submit")
            input(id="notes", type="hidden", name="notes")
            input(id="pauses", type="hidden", name="pauses")
    //- div(id="footer")
        | <b><a href='http://github.com/jacobkingery/GhostFiddle' style='color: #111;'>Team Ghost Fiddle</a></b>
